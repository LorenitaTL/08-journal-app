{"version":3,"sources":["firebase/firebase-config.js","hooks/useForm.js","types/types.js","actions/ui.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/NothingSelected.js","components/notes/NotesAppBar.js","components/notes/NotesScreen.js","components/journal/JournalScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","types","setError","err","type","payload","finishLoading","loadNotes","uid","a","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","note","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","startLoginWithEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","e","console","log","message","logout","LoginScreen","useDispatch","loading","useSelector","state","ui","formValues","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","JournalEntry","date","noteDate","moment","style","backgroundSize","backgroundImage","format","JournalEntries","map","key","Sidebar","signOut","newNote","Date","getTime","add","NothingSelected","NotesAppBar","active","display","files","text","allowOutsidClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NotesScreen","activeId","useRef","useEffect","current","delete","startDeleting","JournalScreen","PrivateRoute","isAuthenticated","Component","rest","localStorage","setItem","location","pathname","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4ffbbcde.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAD2UH-Z1hN4WcV1ip6hkE9hNXLrZK5-8g\",\r\n    authDomain: \"react-course-13b32.firebaseapp.com\",\r\n    databaseURL: \"https://react-course-13b32.firebaseio.com\",\r\n    projectId: \"react-course-13b32\",\r\n    storageBucket: \"react-course-13b32.appspot.com\",\r\n    messagingSenderId: \"700465524794\",\r\n    appId: \"1:700465524794:web:2e9757d35532438ee8c503\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\nexport { db, googleAuthProvider, firebase }","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const reset = (newFormState = initialState) => {\r\n    setValues(newFormState);\r\n  };\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  return [values, handleInputChange, reset];\r\n};\r\n","export const types ={\r\n    login:'[Auth] Login',\r\n    logout:'[Auth] Logout',\r\n\r\n    uiSetError:'[UI] Set Error',\r\n    uiRemoveError:'[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New Note',\r\n    notesActive: '[Notes] Set Active note',\r\n    notesLoad: '[Notes] Load Notes',\r\n    notesUpdate: '[Notes] Update Note',\r\n    notesFileUrl: '[Notes] Update image url',\r\n    notesDelete: '[Notes] Delete Note',\r\n    notesLogoutCleaninng: '[Notes] Logout Cleaning',\r\n}","import { types } from '../types/types';\r\n\r\nexport const setError = (err) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n});\r\n\r\nexport const  startLoading = ()=>({\r\n    type: types.uiStartLoading\r\n});\r\n\r\nexport const  finishLoading = ()=>({\r\n    type: types.uiFinishLoading\r\n});","import { db } from \"../firebase/firebase-config\"\r\n\r\n\r\nexport const loadNotes = async ( uid ) => {\r\n\r\n    const notesSnap = await db.collection(`${ uid }/journal/notes`).get();\r\n    const notes = [];\r\n\r\n    notesSnap.forEach( snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    });\r\n    \r\n    return notes;\r\n}\r\n","export const fileUpload = async (file) =>{\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/spmjerez/upload';\r\n    const formData = new FormData();\r\n    formData.append('upload_preset','react-journal');\r\n    formData.append('file',file);\r\n\r\n    try {\r\n        const resp = await fetch(cloudUrl, {\r\n            method:'POST',\r\n            body: formData\r\n        });\r\n        if (resp.ok) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        }else{\r\n            throw await resp.json()\r\n        }\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}","import Swal from 'sweetalert2';\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { types } from \"../types/types\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { fileUpload } from '../helpers/fileUpload';\r\n\r\n//react-journal\r\n\r\nexport const startNewNote = (dispatch) => {\r\n    return async (dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n\r\n        dispatch(activeNote(doc.id, newNote))\r\n        dispatch(addNewNote(doc.id, newNote))\r\n    }\r\n}\r\n\r\nexport const activeNote = (id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const addNewNote = (id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n    return async (dispatch) => {\r\n\r\n        const notes = await loadNotes(uid);\r\n        dispatch(setNotes(notes));\r\n\r\n    }\r\n}\r\n\r\nexport const setNotes = (notes) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\nexport const startSaveNote = (note) => {\r\n    return async (dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n\r\n        if (!note.url) {\r\n            delete note.url\r\n        }\r\n\r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore)\r\n\r\n        dispatch(refreshNote(note.id, noteToFirestore));\r\n        Swal.fire('Saved', note.title, 'success')\r\n    }\r\n};\r\n\r\nexport const refreshNote = (id, note) => ({\r\n    type: types.notesUpdate,\r\n    payload: {\r\n        id,\r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n});\r\n\r\nexport const startUploading = (file) => {\r\n    return async (dispatch, getState) => {\r\n        const { active: activeNote } = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading',\r\n            text: 'Please wait...',\r\n            allowOutsidClick: false,\r\n            onBeforeOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        })\r\n        const fileUrl = await fileUpload(file);\r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch(startSaveNote(activeNote));\r\n\r\n        Swal.close();\r\n    }\r\n};\r\n\r\nexport const startDeleting = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const uid = getState().auth.uid;\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n        dispatch(deleteNote(id));\r\n\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n});\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaninng,\r\n})\r\n","import Swal from 'sweetalert2';\r\n\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\r\nimport { types } from \"../types/types\"\r\nimport { startLoading, finishLoading } from './ui';\r\nimport { noteLogout } from './notes';\r\n\r\nexport const startLoginWithEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n\r\n        dispatch(startLoading());\r\n\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(({ user }) => {\r\n                dispatch(login(user.uid, user.displayName));\r\n                dispatch(finishLoading());\r\n            }).catch(e=>{\r\n                console.log(e);\r\n                dispatch(finishLoading());\r\n                Swal.fire('Error', e.message, 'error');\r\n            })\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n    return (dispatch) => {\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then(async ({ user }) => {\r\n                await user.updateProfile({ displayName: name })\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            }).catch(e => {\r\n                console.log(e)\r\n                Swal.fire('Error', e.message, 'error');\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then(({ user }) => {\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const login = (uid, displayName) => ({\r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName\r\n    }\r\n});\r\n\r\nexport const startLogout =()=>{\r\n    return async(dispatch)=>{\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch(logout());\r\n        dispatch(noteLogout())\r\n    }\r\n}\r\n\r\nexport const logout =() =>({\r\n    type: types.logout\r\n})","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { startLoginWithEmailPassword, startGoogleLogin } from '../../actions/auth';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {loading} = useSelector(state => state.ui);\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        email: 'lore7096@gmail.com',\r\n        password: '123456'\r\n    });\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin =(e) =>{\r\n        e.preventDefault()\r\n        dispatch(startLoginWithEmailPassword(email,password))\r\n    }\r\n\r\n    const handleGoogleLogin =()=>{\r\n        dispatch(startGoogleLogin());\r\n    }\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n            <form \r\n            onSubmit={handleLogin}\r\n            className =\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"false\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    password={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <button\r\n                    className=\"btn btn-primary btn-block\"\r\n                    type=\"submit\"\r\n                    disabled={loading}\r\n                >\r\n                    Login\r\n            </button>\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social networks</p>\r\n                    <div\r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <Link\r\n                    to=\"/auth/register\"\r\n                    className=\"link\"\r\n                >\r\n                    Create new account\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport validator from 'validator';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { setError, removeError } from '../../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { msgError } = useSelector(state => state.ui);\r\n    const [formValues, handleInputChange] = useForm({\r\n        name: 'Lorena',\r\n        email: 'lorena-isc@gmail.com',\r\n        password: '123456',\r\n        password2: '123456',\r\n    });\r\n\r\n    const { name, email, password, password2 } = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (isFormValid()) {\r\n            dispatch(startRegisterWithEmailPasswordName(email, password, name));\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n        if (name.trim().length === 0) {\r\n            dispatch(setError('Name is required'));\r\n            return false;\r\n        } else if (!validator.isEmail(email)) {\r\n            dispatch(setError('Email is not valid'));\r\n            return false;\r\n        } else if (password !== password2 || password.length < 5) {\r\n            dispatch(setError('Password should be least 6 characters and match each other'));\r\n            return false;\r\n        }\r\n        dispatch(removeError());\r\n        return true;\r\n    }\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register Screen</h3>\r\n\r\n            <form \r\n            onSubmit={handleRegister}\r\n            className =\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n\r\n                {\r\n                    msgError &&\r\n                    (<div className=\"auth__alert-error\">\r\n                        {msgError}\r\n                    </div>)\r\n                }\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"false\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"false\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <button\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                    type=\"submit\"\r\n                >\r\n                    Register\r\n            </button>\r\n\r\n                <Link\r\n                    to=\"/auth/login\"\r\n                    className=\"link\"\r\n                >\r\n                    Already registered?\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box__container\">\r\n            <Switch>\r\n                <Route\r\n                exact\r\n                path=\"/auth/login\"\r\n                component={LoginScreen}\r\n                />\r\n                <Route\r\n                exact\r\n                path=\"/auth/register\"\r\n                component={RegisterScreen}\r\n                />\r\n                <Redirect to=\"/auth/login\" />\r\n            </Switch>\r\n        \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nexport const JournalEntry = ({ id, date, title, body, url }) => {\r\n\r\n    const noteDate = moment(date);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleEntryClick = () => {\r\n        dispatch(activeNote(id, { date, title, body, url }))\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\"\r\n            onClick={handleEntryClick}\r\n        >\r\n            {\r\n                url &&\r\n                <div\r\n                    className=\"journal__entry-picture\"\r\n                    style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(${url})`\r\n                        //backgroundImage: 'url(https://c4.wallpaperflare.com/wallpaper/719/640/12/marvel-comics-the-avengers-spider-man-avengers-infinity-war-wallpaper-preview.jpg)'\r\n                    }}\r\n                ></div>}\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    {title}\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    {body}\r\n                </p>\r\n            </div>\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{noteDate.format('dddd')}</span>\r\n                <h4>{noteDate.format('Do')}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const { notes } = useSelector(state => state.notes);\r\n    \r\n    return (\r\n        <div className=\"journal__entries \">\r\n            {\r\n                notes.map(note => (\r\n                    <JournalEntry \r\n                    key={note.id}\r\n                    {...note} />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { JournalEntries } from './JournalEntries'\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector(state => state.auth)\r\n\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout())\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch(startNewNote())\r\n    }\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon    \"></i>\r\n                    <span>{name}</span>\r\n                </h3>\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={handleLogout}\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div\r\n                className=\"journal__new-entry\"\r\n                onClick={handleAddNew}>\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p\r\n                    className=\"mt-5\"\r\n                >\r\n                    New entry\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br />\r\n                pr create an entry\r\n            </p>\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { active } = useSelector(state => state.notes)\r\n    const handleSave = () => {\r\n        console.log(active);\r\n        dispatch(startSaveNote(active));\r\n    }\r\n\r\n    const handlePictureClick = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if(file){\r\n            dispatch(startUploading(file));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>28 de agosto de 2020</span>\r\n\r\n            <div>\r\n                <input\r\n                    id=\"fileSelector\"\r\n                    type=\"file\"\r\n                    name=\"file\"\r\n                    style={{ display: 'none' }}\r\n                    onChange={handleFileChange}\r\n                />\r\n\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={handlePictureClick}\r\n                >\r\n                    Picture\r\n                </button>\r\n\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={handleSave}\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { NotesAppBar } from './NotesAppBar';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\n\r\nexport const NotesScreen = () => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const { active: note } = useSelector(state => state.notes)\r\n    const [formValues, handleInputChange, reset] = useForm(note);\r\n    const { body, title, id } = formValues;\r\n\r\n    const activeId = useRef(note.id);\r\n\r\n\r\n    useEffect(() => {\r\n        if (note.id !== activeId.current) {\r\n            reset(note);\r\n            activeId.current = note.id;\r\n        }\r\n    }, [note, reset])\r\n\r\n    useEffect(() => {\r\n        dispatch(activeNote(formValues.id, { ...formValues }))\r\n    }, [formValues, dispatch]);\r\n\r\n    const handleDelete =()=>{\r\n        //console.log(id);\r\n        dispatch(startDeleting(id))\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"What happened today\"\r\n                    className=\"notes__textarea\"\r\n                    name=\"body\"\r\n                    value={body}\r\n                    onChange={handleInputChange}\r\n                ></textarea>\r\n                {\r\n                    (note.url) &&\r\n                    (<div className=\"notes__image\">\r\n                        <img src={note.url}\r\n                            alt=\"AV\" />\r\n                    </div>)\r\n                }\r\n\r\n            </div>\r\n\r\n            <button \r\n            className=\"btn-danger\"\r\n            onClick={handleDelete}>\r\n                Delete\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Sidebar } from './Sidebar';\r\nimport { NothingSelected } from './NothingSelected';\r\nimport { NotesScreen } from '../notes/NotesScreen';\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const {active} = useSelector(state => state.notes);\r\n    \r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n            <Sidebar />\r\n\r\n            <main>\r\n                {\r\n                    (active)\r\n                    ?(<NotesScreen />)\r\n                    :(<NothingSelected />)\r\n                }\r\n                \r\n            </main>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Route, Redirect} from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    localStorage.setItem('lastPath', rest.location.pathname);\r\n    return (\r\n        <Route {...rest}\r\n        component={(props)=>(\r\n            (isAuthenticated)\r\n            ?(<Component{...props} />)\r\n            :(<Redirect to=\"/auth/login\" />)\r\n        )}\r\n        />\r\n    )\r\n}\r\nPrivateRoute.propTypes ={\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Route, Redirect} from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n        component={(props)=>(\r\n            (isAuthenticated)\r\n            ?(<Redirect to=\"/\" />)\r\n            :(<Component{...props} />)\r\n        )}\r\n        />\r\n    )\r\n}\r\nPublicRoute.propTypes ={\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { firebase } from '../firebase/firebase-config';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { login } from '../actions/auth';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setChecking] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        firebase.auth().onAuthStateChanged(async(user) => {\r\n\r\n            if (user?.uid) {\r\n                dispatch(login(user.uid, user.displayName))\r\n                setIsLoggedIn(true);\r\n                dispatch(startLoadingNotes(user.uid));\r\n            } else {\r\n                setIsLoggedIn(false);\r\n            }\r\n\r\n            setChecking(false);\r\n        });\r\n\r\n    }, [dispatch, setChecking, setIsLoggedIn]);\r\n\r\n    if (checking) {\r\n        return (\r\n            <h1>Espere...</h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        isAuthenticated={isLoggedIn}\r\n                        path=\"/auth\"\r\n                        component={AuthRouter}\r\n                    />\r\n                    <PrivateRoute\r\n                        exact\r\n                        isAuthenticated={isLoggedIn}\r\n                        path=\"/\"\r\n                        component={JournalScreen}\r\n                    />\r\n                    <Redirect to=\"auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n            case types.notesAddNew:\r\n                return {\r\n                    ...state,\r\n                    notes:[action.payload,...state.notes]\r\n                }\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n        case types.notesUpdate:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter(note => note.id !== action.payload)\r\n            }\r\n        case types.notesLogoutCleaninng:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes:[]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport thunk from 'redux-thunk';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui:uiReducer,\r\n    notes:notesReducer\r\n});\r\n\r\nexport const store = createStore(\r\n    reducers, /* preloadedState, */\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n        case types.logout:\r\n            return {\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react'\r\nimport {Provider} from 'react-redux';\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { store } from './store/store';\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { JournalApp } from './JournalApp';\r\nimport './styles/styles.scss';\r\n\r\nReactDOM.render(\r\n    <JournalApp />,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}